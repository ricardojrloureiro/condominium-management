{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"prompt",
				"promptString"
			],
			[
				"is",
				"isActive"
			],
			[
				"prope",
				"properties"
			],
			[
				"wo",
				"workers"
			],
			[
				"add",
				"addMaintenanceToCondominium"
			],
			[
				"getWork",
				"getWorkersList"
			],
			[
				"getwo",
				"getWorkerFromList"
			],
			[
				"C",
				"Condominium"
			],
			[
				"worke",
				"workersMenu"
			],
			[
				"get",
				"getName"
			],
			[
				"work",
				"workersMenu"
			],
			[
				"an",
				"addMenuItem"
			],
			[
				"addMe",
				"addMenuItem"
			],
			[
				"type",
				"typeMenu"
			],
			[
				"pro",
				"promptInt"
			],
			[
				"addMain",
				"addMaintenanceToProperty"
			],
			[
				"maintan",
				"maintenanceInfo"
			],
			[
				"months",
				"monthsLeft"
			],
			[
				"base",
				"baseOfficeCost"
			],
			[
				"set",
				"setBaseOfficeCost"
			],
			[
				"bas",
				"baseApartmentCost"
			],
			[
				"are",
				"areaMultiplier"
			],
			[
				"to",
				"toggleMenu"
			],
			[
				"propert",
				"property"
			],
			[
				"condo",
				"condominiums"
			]
		]
	},
	"buffers":
	[
		{
			"file": "condominium.cpp",
			"settings":
			{
				"buffer_size": 8084,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * condominio.h\n *\n *  Created on: Oct 10, 2013\n *      Author: rui\n */\n\n#ifndef CONDOMINIUM_H_\n#define CONDOMINIUM_H_\n\n#include <vector>\n#include <string>\n#include <sstream>\n#include <fstream>\n\n#include \"worker.h\"\n#include \"property.h\"\n#include \"menu.h\"\n#include <stdlib.h>\n\nusing namespace std;\n\nclass Condominium {\n	long id;\n	float areaMultiplier;\n	float floorMultiplier;\n	float baseApartmentCost;\n	float baseOfficeCost;\n	float baseStoreCost;\n	string name;\n	vector <Maintenance*> ma intenance;\n	vector <Property*> properties;\n	vector <int> fixedCosts; //monthly costs for water, electricity, ...\n	static long condominiumId;\n\npublic:\n	Condominium(string,float,float,float,float,float);\n	Condominium(long, string,float,float,float,float,float);\n	void addProperty(Property*);\n	bool removeProperty(Property*);\n	void removePropertyFromCond();\n	void addMaintenanceToCondominium();\n	void addProptoCond();\n	void addMaintenance(Maintenance*);\n	void showCondominium();\n	void showProperties();\n	int getId();\n	string getName();\n	void saveProperties();\n	int getProfit();\n	void manageCond(vector<Worker*>);\n	void managePropertyFromCond();\n	void addMaintenanceToCondominium(vector<Worker*>);\n	bool isEmpty();\n	void setAreaMultiplier(float);\n	float getAreaMultiplier();\n	void setFloorMultiplier(float);\n	float getFloorMultiplier();\n	void setBaseApartmentCost(float);\n	float getBaseApartmentCost();\n	void setBaseOfficeCost(float);\n	float getBaseOfficeCost();\n	void setBaseStoreCost(float);\n	float getBaseStoreCost();\n	Worker* getWorkerFromList(vector<Worker*>);\n};\n\n\n#endif /* CONDOMINIUM_H_ */\n",
			"file": "condominium.h",
			"file_size": 1583,
			"file_write_time": 130281397920000000,
			"settings":
			{
				"buffer_size": 1584,
				"line_ending": "Unix"
			}
		},
		{
			"file": "maintenance.h",
			"settings":
			{
				"buffer_size": 609,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Makefile.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/rui/Projects/AEDA/src/condominium.h",
		"/Users/rui/Projects/AEDA/src/corporation.h",
		"/Users/rui/Projects/AEDA/src/corporation.cpp",
		"/Users/rui/Projects/AEDA/src/worker.h",
		"/Users/rui/Projects/AEDA/src/worker.cpp",
		"/Users/rui/Projects/AEDA/src/main.cpp",
		"/Users/rui/Projects/AEDA/src/maintenance.cpp",
		"/Users/rui/Projects/AEDA/src/maintenance.h",
		"/Users/rui/Projects/AEDA/src/menu.cpp",
		"/Users/rui/Projects/AEDA/src/condominium.cpp",
		"/Users/rui/Projects/AEDA/src/property.h",
		"/Users/rui/Projects/AEDA/src/owner.h",
		"/Users/rui/Projects/AEDA/src/menu.h",
		"/Users/rui/Projects/AEDA/src/property.cpp",
		"/Users/rui/Projects/AEDA/src/owner.cpp",
		"/Users/rui/Library/Application Support/Sublime Text 3/Packages/User/teste.sublime-build",
		"/Users/rui/Library/Application Support/Sublime Text 3/Packages/User/Makefile.sublime-build",
		"/Users/rui/Projects/AEDA/src/aeda.sublime-project",
		"/Users/rui/Projects/AEDA/src/Cpp.sublime-build"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"addWorker",
			"if(id!=",
			"if(!=",
			"workers",
			"mainten"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "condominium.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8084,
						"regions":
						{
						},
						"selection":
						[
							[
								6072,
								6072
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 2096.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "condominium.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1584,
						"regions":
						{
						},
						"selection":
						[
							[
								489,
								489
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 341.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "maintenance.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 609,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 129.0
	},
	"project": "aeda.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"cond",
				"condominium.cpp"
			],
			[
				"con",
				"condominium.h"
			],
			[
				"prop",
				"property.h"
			],
			[
				"menu",
				"menu.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"corpo",
				"corporation.cpp"
			],
			[
				"pro",
				"property.h"
			],
			[
				"man",
				"maintenance.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 189.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
